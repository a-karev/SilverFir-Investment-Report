/**
 * SilverFir üå≤. [GAS Release for –¢‚Äî–ñ]
 * 
 * –ú–æ–¥—É–ª—å –ø–æ–∏—Å–∫–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π –Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –ë–∏—Ä–∂–µ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
 *
 * @author Mikhail Shardin [–ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω] 
 * 
 * Last updated: 03.09.2023
 * 
 */

function bond_search_v102023() {
    eval(UrlFetchApp.fetch('https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js').getContentText()); // –∏—Å–ø–æ–ª—å–∑—É—é https://momentjs.com/ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏

    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var parameters = ss.getSheetByName("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã");
    var result = ss.getSheetByName("–†–µ–∑—É–ª—å—Ç–∞—Ç");
    result.clear();
    result.clearFormats();
    const YieldMore = parameters.getRange("a3").getValue() //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const YieldLess = parameters.getRange("c3").getValue() //–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const PriceMore = parameters.getRange("a4").getValue() //–¶–µ–Ω–∞ –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const PriceLess = parameters.getRange("c4").getValue() //–¶–µ–Ω–∞ –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const DurationMore = parameters.getRange("a5").getValue() //–î—é—Ä–∞—Ü–∏—è –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const DurationLess = parameters.getRange("c5").getValue() //–î—é—Ä–∞—Ü–∏—è –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const VolumeMore = parameters.getRange("c7").getValue() //–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ 15 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π, —à—Ç. –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const BondVolumeMore = parameters.getRange("c8").getValue() // –°–æ–≤–æ–∫—É–ø–Ω—ã–π –æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç. –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    const OfferYesNo = parameters.getRange("c6").getValue() //–£—á–∏—Ç—ã–≤–∞—Ç—å, —á—Ç–æ–±—ã –¥–µ–Ω–µ–∂–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –±—ã–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã –¥–æ —Å–∞–º–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è? 
    const conditions = `–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:
    - ${YieldMore}% < –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å < ${YieldLess}% 
    - ${PriceMore}% < –¶–µ–Ω–∞ < ${PriceLess}% 
    - ${DurationMore} –º–µ—Å. < –î—é—Ä–∞—Ü–∏—è < ${DurationLess} –º–µ—Å.  
    - –ó–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫—É–ø–æ–Ω–æ–≤ –∏–∑–≤–µ—Å—Ç–Ω—ã –¥–æ —Å–∞–º–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è?: ${OfferYesNo}.
    - –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ 15 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π (c ${moment().subtract(15, 'days').format('DD.MM.YYYY')}) > ${VolumeMore} —à—Ç. 
    - –°–æ–≤–æ–∫—É–ø–Ω—ã–π –æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ 15 –¥–Ω–µ–π –±–æ–ª—å—à–µ ${BondVolumeMore} —à—Ç.
    - –ü–æ–∏—Å–∫ –≤ –¢0, –¢+, –¢+ (USD) - –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º - –±–µ–∑–∞–¥—Ä–µ—Å. `
    Logger.log(conditions)

    var bonds = []
    var count
    Logger.log(`–ü–æ–∏—Å–∫ –Ω–∞—á–∞—Ç ${new Date().toLocaleString("ru-RU")}.`)

    for (const t of [58, 193, 105, 77, 207, 167, 245]) { // https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/
        const url = 'https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/' + t + '/securities.json?iss.dp=comma&iss.meta=off&iss.only=securities,marketdata&securities.columns=SECID,SECNAME,PREVLEGALCLOSEPRICE&marketdata.columns=SECID,YIELD,DURATION'
        console.log('–°—Å—ã–ª–∫–∞ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –≥—Ä—É–ø–ø—ã: %s', url)
        try {
            const response = UrlFetchApp.fetch(url).getContentText();
            const json = JSON.parse(response);
            let list = json.securities.data
            count = list.length
            console.log('–í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ: %s –±—É–º–∞–≥.', count)
            for (var i = 0; i <= count - 1; i++) {
                BondName = json.securities.data[i][1].replace(/\"/g, '').replace(/\'/g, '')
                SECID = json.securities.data[i][0]
                BondPrice = json.securities.data[i][2]
                BondYield = json.marketdata.data[i][1]
                BondDuration = Math.floor((json.marketdata.data[i][2] / 30) * 100) / 100 // –∫–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–µ—Å—è—Ü–µ–≤ 
                console.log(`–°—Ç—Ä–æ–∫–∞ ${i + 1} –∏–∑ ${count}: ${BondName} (${SECID}): —Ü–µ–Ω–∞=${BondPrice}%, –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å=${BondYield}%.`)
                if (BondYield > YieldMore && BondYield < YieldLess && //—É—Å–ª–æ–≤–∏—è –≤—ã–±–æ—Ä–∫–∏
                    BondPrice > PriceMore && BondPrice < PriceLess &&
                    BondDuration > DurationMore && BondDuration < DurationLess) {

                    console.log(`  \\-> –£—Å–ª–æ–≤–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ (${YieldMore} < ${BondYield}% < ${YieldLess}), —Ü–µ–Ω—ã (${PriceMore} < ${BondPrice}% < ${PriceLess}) –∏ –¥—é—Ä–∞—Ü–∏–∏ (${DurationMore} < ${BondDuration} –º–µ—Å. < ${DurationLess}) –¥–ª—è ${BondName} –ø—Ä–æ—à–ª–æ.`)
                    volume = MOEXsearchVolume(SECID, VolumeMore)
                    BondVolume = volume.value

                    if (volume.lowLiquid == 0 && BondVolume > BondVolumeMore) { // lowLiquid: 0 –∏ 1 - –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
                        //‚ùó 0 - —á—Ç–æ–±—ã –æ–±–æ—Ä–æ—Ç –±—ã–ª —Å—Ç—Ä–æ–≥–æ –±–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ
                        //‚ùó 1 - —Ñ–∏–ª—å—Ç—Ä –æ–±–æ—Ä–æ—Ç–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –≤ –≤—ã–±–æ—Ä–∫—É –ø–æ–ø–∞–¥–∞—é—Ç –≤—Å–µ –±—É–º–∞–≥–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ –æ—Å—Ç–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
                        MonthsOfPayments = MOEXsearchMonthsOfPayments(SECID)

                        MonthsOfPaymentsDates = MonthsOfPayments.formattedDates
                        MonthsOfPaymentsNull = MonthsOfPayments.value_rubNull
                        if (OfferYesNo == "–î–ê" && MonthsOfPaymentsNull == 0) {
                            bonds.push([BondName, SECID, BondPrice, BondVolume, BondYield, BondDuration, MonthsOfPaymentsDates])
                            console.log(`–î–ª—è ${BondName} –≤—Å–µ –¥–∞—Ç—ã –±—É–¥—É—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤—ã–ø–ª–∞—Ç.`)
                            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç ‚Ññ %s: %s.', bonds.length, JSON.stringify(bonds[bonds.length - 1]))
                        }
                        if (OfferYesNo == "–ù–ï–¢") {
                            bonds.push([BondName, SECID, BondPrice, BondVolume, BondYield, BondDuration, MonthsOfPaymentsDates])
                            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç ‚Ññ %s: %s.', bonds.length, JSON.stringify(bonds[bonds.length - 1]))
                        }
                    } else {
                        console.log(`–û–±–ª–∏–≥–∞—Ü–∏—è ${BondName}, ${SECID} –≤ –≤—ã–±–æ—Ä–∫—É –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –∏–∑-–∑–∞ –º–∞–ª—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤ –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ –º–∞–ª–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π.`)
                    }
                }
            }
        } catch (e) {
            console.log(`–û—à–∏–±–∫–∞ –≤ bond_search_v062023: ${e}.`)
        }
    }
    bonds.sort(function (x, y) { // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—Ç–æ–ª–±—Ü—É –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç.
        var xp = x[3];
        var yp = y[3];
        return xp == yp ? 0 : xp > yp ? -1 : 1;
    });
    bonds.unshift(["–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–ö–æ–¥ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏", "–¶–µ–Ω–∞, %", `–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫\n—Å ${moment().subtract(15, 'days').format('DD.MM.YYYY')}, —à—Ç.`, "–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å", "–î—é—Ä–∞—Ü–∏—è, –º–µ—Å—è—Ü–µ–≤", "–ú–µ—Å—è—Ü—ã –≤—ã–ø–ª–∞—Ç"]);
    result.getRange("A1:G" + bonds.length).setValues(bonds);
    result.getRange("a:g").setHorizontalAlignment("center").setVerticalAlignment("middle");
    result.getRange("D:D").setNumberFormat("#,##0");
    result.getRange("A1:G1").setFontWeight("bold");
    result.autoResizeColumns(1, 7);
    result.getRange(result.getLastRow() + 2, 1).setHorizontalAlignment("left").setValue(conditions + "\n\n–î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã: " + Utilities.formatDate(new Date(), "GMT+5", "dd.MM.yyyy –≤ HH:mm:ss") + ".");
}

function MOEXsearchVolume(ID, thresholdValue) { // –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ n –¥–Ω–µ–π –±–æ–ª—å—à–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞
    now = new Date();
    DateRequestPrevious = moment().subtract(15, 'days').format('YYYY-MM-DD') //—ç—Ç–æ—Ç –¥–µ–Ω—å 15 –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    const boardID = MOEXboardID(ID)
    if (!boardID) {
        return
    }
    const url = `https://iss.moex.com/iss/history/engines/stock/markets/bonds/boards/${boardID}/securities/${ID}.json?iss.meta=off&iss.only=history&history.columns=SECID,TRADEDATE,VOLUME,NUMTRADES&limit=20&from=${DateRequestPrevious}`
    // numtrades - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ —Å –±—É–º–∞–≥–æ–π
    // VOLUME - –æ–±–æ—Ä–æ—Ç –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –±—É–º–∞–≥ (–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç)
    console.log('–°—Å—ã–ª–∫–∞ –¥–ª—è %s: %s', ID, url)
    try {
        const response = UrlFetchApp.fetch(url).getContentText();
        const json = JSON.parse(response);
        let list = json.history.data
        let count = list.length
        var volume_sum = 0
        var lowLiquid = 0
        for (var i = 0; i <= count - 1; i++) {
            volume = json.history.data[i][2];
            volume_sum += volume
            if (thresholdValue > volume) {
                var lowLiquid = 1
                console.log(`MOEXsearchVolume. –ù–∞ ${i+1}-–π –¥–µ–Ω—å –∏–∑ ${count} –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ ${ID} –º–µ–Ω—å—à–µ —á–µ–º ${thresholdValue}: ${volume} —à—Ç.`)
            }
            if (count < 6) { // –µ—Å–ª–∏ –≤—Å–µ–≥–æ –¥–Ω–µ–π –≤ –∞–ø–∏ –Ω–∞ —ç—Ç–æ–º –ø–µ—Ä–∏–æ–¥–µ –æ—á–µ–Ω—å –º–∞–ª–æ
                lowLiquid = 1
                console.log(`MOEXsearchVolume. –í—Å–µ–≥–æ –≤ –ê–ü–ò –ú–æ—Å–±–∏—Ä–∂–∏ –¥–æ—Å—Ç—É–ø–Ω–æ ${count} –¥–Ω–µ–π, –∞ –Ω–∞–¥–æ —Ö–æ—Ç—è –±—ã –±–æ–ª—å—à–µ 6 —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π —Å ${DateRequestPrevious}!`)
            }
        }
        if (lowLiquid != 1) {
            console.log(`MOEXsearchVolume. –í–æ –≤—Å–µ—Ö ${count} –¥–Ω—è—Ö –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ ${ID} –±—ã–ª –±–æ–ª—å—à–µ, —á–µ–º ${thresholdValue} —à—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.`)
        }
        console.log(`MOEXsearchVolume. –ò—Ç–æ–≥–æ–≤—ã–π –æ–±–æ—Ä–æ—Ç –≤ –±—É–º–∞–≥–∞—Ö (–æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç) –∑–∞ ${count} –¥–Ω–µ–π: ${volume_sum} —à—Ç –Ω–∞—Ä–∞—Å—Ç–∞—é—â–∏–º –∏—Ç–æ–≥–æ–º.`)
        return {
            lowLiquid: lowLiquid,
            value: volume_sum
        }
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ MOEXsearchVolume:' + e)
    }
}

function MOEXsearchMonthsOfPayments(ID) { //—É–∑–Ω–∞—ë–º –º–µ—Å—è—Ü—ã, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤—ã–ø–ª–∞—Ç—ã
    const url = `https://iss.moex.com/iss/statistics/engines/stock/markets/bonds/bondization/${ID}.json?iss.meta=off&iss.only=coupons`
    console.log(`MOEXsearchMonthsOfPayments. –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ—Å—è—Ü–µ–≤ –≤—ã–ø–ª–∞—Ç –¥–ª—è ${ID}: ${url}.`)
    try {
        const response = UrlFetchApp.fetch(url).getContentText();
        const json = JSON.parse(response);
        var couponDates = []
        var value_rubNull = 0
        for (var i = 0; i <= json.coupons.data.length - 1; i++) {
            coupondate = json.coupons.data[i][3] // –¥–∞—Ç—ã –∫—É–ø–æ–Ω–∞
            value_rub = json.coupons.data[i][9] // —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã –∫—É–ø–æ–Ω–∞
            inFuture = new Date(coupondate) > new Date()
            if (inFuture == true) {
                couponDates.push(+coupondate
                    .split("-")[1]
                )
                // console.log(`MOEXsearchMonthsOfPayments. –ö—É–ø–æ–Ω –¥–ª—è ${ID} –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –≤ –º–µ—Å—è—Ü ${JSON.stringify(couponDates[couponDates.length - 1])} (—Å—Ç—Ä–æ–∫–∞ ${couponDates.length}).`)
                if (value_rub == null) {
                    value_rubNull += 1
                }
            }
        }
        if (value_rubNull > 0) {
            console.log(`MOEXsearchMonthsOfPayments. –î–ª—è ${ID} –µ—Å—Ç—å ${value_rubNull} –¥–∞—Ç(—ã) –±—É–¥—É—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤—ã–ø–ª–∞—Ç.`)
        }
        let uniqueDates = [...new Set(couponDates)] // —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–µ—Å—è—Ü–µ–≤
        uniqueDates = uniqueDates.sort(function (a, b) {
            return a - b;
        })
        console.log(`MOEXsearchMonthsOfPayments. –ö—É–ø–æ–Ω—ã –¥–ª—è ${ID} –≤—ã–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –≤ ${uniqueDates} –º–µ—Å—è—Ü—ã.`)
        let formattedDates = ''
        for (let y = 1; y < 13; y++) {
            formattedDates += uniqueDates.includes(y) ? `${y}` : `‚Äì‚Äì‚Äì`
            formattedDates += y == 12 ? `` : `-` // -
        }
        formattedDates = formattedDates
            .replace(/^1-/g, '—è–Ω–≤-')
            .replace(/2-/g, '—Ñ–µ–≤-')
            .replace(/3-/g, '–º–∞—Ä-')
            .replace(/4-/g, '–∞–ø—Ä-')
            .replace(/5-/g, '–º–∞–π-')
            .replace(/6-/g, '–∏—é–Ω-')
            .replace(/7-/g, '–∏—é–ª-')
            .replace(/8-/g, '–∞–≤–≥-')
            .replace(/9-/g, '—Å–µ–Ω-')
            .replace(/10-/g, '–æ–∫—Ç-')
            .replace(/11-/g, '–Ω–æ—è-')
            .replace(/12/g, '-–¥–µ–∫')
        // console.log(`MOEXsearchMonthsOfPayments. –°—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –º–µ—Å—è—Ü—ã –≤—ã–ø–ª–∞—Ç: ${formattedDates}.`)
        return {
            formattedDates: formattedDates,
            value_rubNull: value_rubNull
        }
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ MOEXsearchMonthsOfPayments:' + e)
    }
}

/**
 * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

function MOEXboardID(ID) { //—É–∑–Ω–∞–µ–º boardid –ª—é–±–æ–π –±—É–º–∞–≥–∏ –ø–æ —Ç–∏–∫–µ—Ä—É
    const url = 'https://iss.moex.com/iss/securities/' + ID + '.json?iss.meta=off&iss.only=boards&boards.columns=secid,boardid,is_primary'
    try {
        const response = UrlFetchApp.fetch(url).getContentText();
        const json = JSON.parse(response);
        boardID = json.boards.data.find(e => e[2] === 1)[1]
        // console.log("boardID –¥–ª—è %s: %s", ID, boardID);
        return boardID
    } catch (e) {
        console.log('–û—à–∏–±–∫–∞ –≤ MOEXboardID:' + e)
    }
}